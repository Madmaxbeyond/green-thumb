[{"/Users/mcalifornia/code/green-thumb/src/index.js":"1","/Users/mcalifornia/code/green-thumb/src/pages/App/App.jsx":"2","/Users/mcalifornia/code/green-thumb/src/utilities/users-service.js":"3","/Users/mcalifornia/code/green-thumb/src/utilities/plants-api.js":"4","/Users/mcalifornia/code/green-thumb/src/pages/PlantListPage/PlantListPage.jsx":"5","/Users/mcalifornia/code/green-thumb/src/pages/AuthPage/AuthPage.jsx":"6","/Users/mcalifornia/code/green-thumb/src/pages/AddPlantPage/AddPlantPage.jsx":"7","/Users/mcalifornia/code/green-thumb/src/pages/EditPlantPage/EditPlantPage.jsx":"8","/Users/mcalifornia/code/green-thumb/src/components/NavBar/NavBar.jsx":"9","/Users/mcalifornia/code/green-thumb/src/utilities/users-api.js":"10","/Users/mcalifornia/code/green-thumb/src/components/PlantListItem/PlantListItem.jsx":"11","/Users/mcalifornia/code/green-thumb/src/components/SignUpForm/SignUpForm.jsx":"12","/Users/mcalifornia/code/green-thumb/src/components/LoginForm/LoginForm.jsx":"13","/Users/mcalifornia/code/green-thumb/src/utilities/send-request.js":"14"},{"size":305,"mtime":1611683954816,"results":"15","hashOfConfig":"16"},{"size":2488,"mtime":1611949673181,"results":"17","hashOfConfig":"16"},{"size":1246,"mtime":1611943794035,"results":"18","hashOfConfig":"16"},{"size":689,"mtime":1611947405221,"results":"19","hashOfConfig":"16"},{"size":1278,"mtime":1611949971191,"results":"20","hashOfConfig":"16"},{"size":742,"mtime":1611688214932,"results":"21","hashOfConfig":"16"},{"size":2098,"mtime":1611878921368,"results":"22","hashOfConfig":"16"},{"size":2449,"mtime":1611803308963,"results":"23","hashOfConfig":"16"},{"size":1737,"mtime":1611799565007,"results":"24","hashOfConfig":"16"},{"size":406,"mtime":1611945190593,"results":"25","hashOfConfig":"16"},{"size":923,"mtime":1611879331820,"results":"26","hashOfConfig":"16"},{"size":1714,"mtime":1611683954816,"results":"27","hashOfConfig":"16"},{"size":1394,"mtime":1611885976304,"results":"28","hashOfConfig":"16"},{"size":892,"mtime":1611946440526,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"yxs7k5",{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"32"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"32"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"/Users/mcalifornia/code/green-thumb/src/index.js",[],["61","62"],"/Users/mcalifornia/code/green-thumb/src/pages/App/App.jsx",["63"],"/Users/mcalifornia/code/green-thumb/src/utilities/users-service.js",[],"/Users/mcalifornia/code/green-thumb/src/utilities/plants-api.js",[],"/Users/mcalifornia/code/green-thumb/src/pages/PlantListPage/PlantListPage.jsx",["64"],"/Users/mcalifornia/code/green-thumb/src/pages/AuthPage/AuthPage.jsx",[],"/Users/mcalifornia/code/green-thumb/src/pages/AddPlantPage/AddPlantPage.jsx",["65"],"import React, { useState, useRef, useEffect } from 'react';\nimport * as plantAPI from '../../utilities/plants-api';\n\n\nexport default function AddPlantPage({handleAddPlant}) {\n  const [invalidForm, setInvalidForm] = useState(true);\n\n  const [formData, setFormData] = useState({\n    name: '',\n    type: '',\n    datePlanted: ''\n  })\n\n  const formRef = useRef();\n\n  useEffect(() => {\n    formRef.current.checkValidity() ? setInvalidForm(false) : setInvalidForm(true);\n  }, [formData]);\n\n\n  // Arrow function version of handleSubmit:\n  // const handleSubmit = (e) => {\n  //   e.preventDefault()\n  //   handleAddPlant(formData);\n  // }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    handleAddPlant(formData);\n  }\n\n  const handleChange = (e) => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value,\n    })\n  }\n\n  return (\n    <>\n    <h1>Add New Plant</h1>\n    <form autoComplete=\"off\" ref={formRef} onSubmit={handleSubmit}>\n        <div className=\"form-group\">\n          <label>Plant Name</label>\n          <input\n            className=\"form-control\"\n            name=\"name\"\n            placeholder=\"Severus Snape\"\n            value={formData.name}\n            onChange={handleChange}\n            required\n          />\n        </div>\n        <div className=\"form-group\">\n          <label>Plant Type</label>\n          <input\n            className=\"form-control\"\n            name=\"type\"\n            placeholder=\"Snake Plant\"\n            value={formData.type}\n            onChange={handleChange}\n            required\n          />\n        </div>\n        <div className=\"form-group\">\n          <label>Date planted</label>\n          <input\n            className=\"form-control\"\n            name=\"datePlanted\"\n            placeholder=\"2021\"\n            value={formData.datePlanted}\n            onChange={handleChange}\n            required\n          />\n        </div>\n        <button\n          type=\"submit\"\n          className=\"btn\"\n          onClick={handleSubmit}\n          disabled={invalidForm}\n        >\n          Add Plant\n        </button>\n      </form>    \n    </>\n  )\n}","/Users/mcalifornia/code/green-thumb/src/pages/EditPlantPage/EditPlantPage.jsx",["66","67","68","69","70"],"import React, { useState, useEffect, useRef } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\n\nexport default function EditPlantPage(props) {\n    // const location = useLocation();\n    // const [invalidForm, setInvalidForm] = useState(true);\n    // const [formData, setFormData] = useState(location.state.plant);\n    // const formRef = useRef();\n\n    // useEffect(() => {\n    //     formRef.current.checkValidity() ? setInvalidForm(false) : setInvalidForm(true);\n    // }, [formData]);\n    \n    // const handleSubmit = (e) => {\n    //     e.preventDefault()\n    //     props.handleUpdatePlant(formData);\n    // }\n    \n    // const handleChange = (e) => {\n    //     setFormData({\n    //       ...formData,\n    //       [e.target.name]: e.target.value,\n    //     })\n    // }    \n\n    return (\n        <>\n        <h1>HOME</h1>\n            {/* <h1>Edit Plant Details</h1>\n            <form autoComplete=\"off\" ref={formRef} onSubmit={handleSubmit}>\n                <div className=\"form-group\">\n                <label>Plant Name</label>\n                <input\n                    className=\"form-control\"\n                    name=\"name\"\n                    placeholder=\"Severus Snape\"\n                    value={formData.name}\n                    onChange={handleChange}\n                    required\n                />\n                </div>\n                <div className=\"form-group\">\n                <label>Plant Type</label>\n                <input\n                    className=\"form-control\"\n                    name=\"type\"\n                    placeholder=\"Snake Plant\"\n                    value={formData.type}\n                    onChange={handleChange}\n                    required\n                />\n                </div>\n                <div className=\"form-group\">\n                <label>Date planted</label>\n                <input\n                    className=\"form-control\"\n                    name=\"datePlanted\"\n                    placeholder=\"2021\"\n                    value={formData.datePlanted}\n                    onChange={handleChange}\n                    required\n                />\n                </div>\n                <button\n                type=\"submit\"\n                className=\"btn\"\n                disabled={invalidForm}\n                >\n                Save Plant Changes\n                </button>\n                <Link to=\"/plants\">Cancel</Link>\n      </form>             */}\n        </>\n    )\n}","/Users/mcalifornia/code/green-thumb/src/components/NavBar/NavBar.jsx",[],"/Users/mcalifornia/code/green-thumb/src/utilities/users-api.js",[],"/Users/mcalifornia/code/green-thumb/src/components/PlantListItem/PlantListItem.jsx",[],"/Users/mcalifornia/code/green-thumb/src/components/SignUpForm/SignUpForm.jsx",[],"/Users/mcalifornia/code/green-thumb/src/components/LoginForm/LoginForm.jsx",[],"/Users/mcalifornia/code/green-thumb/src/utilities/send-request.js",[],{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","severity":1,"message":"76","line":1,"column":17,"nodeType":"77","messageId":"78","endLine":1,"endColumn":26},{"ruleId":"75","severity":1,"message":"79","line":8,"column":12,"nodeType":"77","messageId":"78","endLine":8,"endColumn":21},{"ruleId":"75","severity":1,"message":"80","line":2,"column":13,"nodeType":"77","messageId":"78","endLine":2,"endColumn":21},{"ruleId":"75","severity":1,"message":"81","line":1,"column":17,"nodeType":"77","messageId":"78","endLine":1,"endColumn":25},{"ruleId":"75","severity":1,"message":"76","line":1,"column":27,"nodeType":"77","messageId":"78","endLine":1,"endColumn":36},{"ruleId":"75","severity":1,"message":"82","line":1,"column":38,"nodeType":"77","messageId":"78","endLine":1,"endColumn":44},{"ruleId":"75","severity":1,"message":"83","line":2,"column":10,"nodeType":"77","messageId":"78","endLine":2,"endColumn":14},{"ruleId":"75","severity":1,"message":"84","line":2,"column":16,"nodeType":"77","messageId":"78","endLine":2,"endColumn":27},"no-native-reassign",["85"],"no-negated-in-lhs",["86"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'newplants' is assigned a value but never used.","'plantAPI' is defined but never used.","'useState' is defined but never used.","'useRef' is defined but never used.","'Link' is defined but never used.","'useLocation' is defined but never used.","no-global-assign","no-unsafe-negation"]